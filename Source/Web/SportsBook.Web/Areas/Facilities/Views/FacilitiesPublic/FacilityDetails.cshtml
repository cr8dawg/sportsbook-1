@model SportsBook.Web.Areas.Facilities.ViewModels.Facilities.FacilityDetailedViewModel
@using Microsoft.AspNet.Identity
<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <h3>@Model.Name</h3>
    </div>
    <div class="col-md-4">
        <div class="details-favorites-button">
            @if (User.Identity.GetUserId() != null)
            {
                @Html.Action("CheckFacilityInFavourites", "FavoriteFacilities", new { id = Model.Id, area = "Facilities" })
            }
            else
            {
                <div id="fav-field" class="row favorites-button">
                </div>
                <div class="favorites-text">
                    <span>Add To Favorites</span>
                </div>
                using (Html.BeginForm("AddToFavorites", "FavoriteFacilities", new { id = Model.Id, area = "Facilities" }, FormMethod.Post))
                {
                    <input class="favorites-submit-button" type="submit" value="aa" />
                }
            }
        </div>
        <div>
            
        </div>

    </div>
</div>
<div class="row">
    <div class="col-md-4">

    </div>
    <div class="col-md-8">
        @{int i = 0;
        foreach (var category in Model.SportCategories)
        {
            i++;
            <span style="font-size:15px">@category.Name</span>
            if (i < Model.SportCategories.Count)
            {
                <span>|</span>
            }
        }
        }

        <span style="font-size:15px">| @Model.City.Name</span>

        @if (Model.Rating != null)
        {
            <span style="font-size:15px">| Overall Rating: @Model.Rating</span>
        }
        else
        {
            <span style="font-size:15px">| -</span>
        }
        /5
        
        | @Model.VotesCount
        @if (Model.VotesCount == 1)
        {
            <span>vote</span>
        }
        else
        {
            <span>votes</span>
        }

        <div style="display:inline-block">          
                <span>| Your Raiting: </span>           
        </div>
        <div style="display:inline-block;">
            @Html.Action("GetUserFacilityRating", "Ratings", new { id = Model.Id, area = "Facilities" })
        </div>
    </div>
</div>

<div class="row">
    <div>
        <img src=@Model.Image class="image-in-details" onerror="standBy()">
    </div>

    <div>@Model.Description</div>
</div>
<div class="clear"></div>
<div id="map_canvas" class="map-in-details"></div>
<div class="address-field">Адрес: <span id="address"></span> </div>
<div class="sports-tags">

</div>


<div class="clear row">
    <div class="col-md-offset-5 col-md-3">
        <button id="show-comments-button" class="btn btn-primary">Show Comments</button>
        <button id="hide-comments-button" class="btn btn-danger" style="display:none">Hide Comments</button>
        @Html.ActionLink("Add Comment", "AddComment", "Comments", new { area = "Facilities", id = Model.Id }, new { @class = "btn btn-primary" })
    </div>
    <div class="col-md-4">
        @if (Request.IsAuthenticated && Model.AuthorId == User.Identity.GetUserId())
        {
            @Html.ActionLink("Edit Facility", "EditFacility", "FacilitiesPrivate", new { area = "Facilities", id = Model.Id }, new { @class = "btn btn-primary pull-right" })
        }
    </div>
</div>

<div style="height:10px;clear:both;"></div>
<div id="comments-part"></div>

<script id="comments-template" type="text/template">
    @foreach (var comment in Model.FacilityComments)
    {
        if (comment.IsDeleted == false)
        {
            <div class="row">
                <div class="col-md-offset-2 panel panel-default col-md-8 panel-comment">
                    <div class="panel-heading">
                        <strong>@comment.AuthorName</strong><span class="text-muted pull-right">@Html.DisplayFor(m => comment.CreatedOn, "DateTimeTemplate")</span>
                    </div>

                    <div class="panel-body row">
                        <div class="col-md-1"><img src=@comment.Author.Avatar width="100" height="100"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-9">
                            @comment.Content
                        </div>

                    </div>
                    @if (User.Identity.GetUserId() == @comment.AuthorId)
                    {
                        <div class="row comments-bottom">
                            <div class="col-md-offset-9 col-md-3 btn-group">
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9 btn-group">
                                        @Html.ActionLink("Edit", "EditComment", "Comments", new { area = "Facilities", id = comment.Id }, new { @class = "btn btn-warning" })
                                        @using (Html.BeginForm("DeleteComment", "Comments", new { area = "Facilities", id = comment.Id }, FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="submit" class="btn btn-danger" value="Delete" />
                                            @*@Html.ActionLink("Delete", "DeleteComment", "Comments", new { id = comment.Id }, new { @class = "btn btn-danger"})*@
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="col-md-2"></div>
            </div>
        }
    }
</script>


@section addComment{
    <script>
        $("#show-comments-button").on("click", function () { showComments() });
        function showComments() {
            $("#show-comments-button").css("display", "none")
            var ShowCommentsTemplate = $('#comments-template').html();
            $("#comments-part").html(ShowCommentsTemplate)
            $("#hide-comments-button").css("display", "inline-block")
        }

        $("#hide-comments-button").on("click", function () { hideComments() });
        function hideComments() {
            $("#hide-comments-button").css("display", "none")
            $("#comments-part").empty();
            $("#show-comments-button").css("display", "inline-block")
        }
    </script>
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            Initialize();
        });

        function Initialize() {
            var markersArray = [];

            google.maps.visualRefresh = true;
            var myLatlng = new google.maps.LatLng(@Model.Latitude, @Model.Longitude);
            var mapOptions = {
                zoom: 14,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            var marker = new google.maps.Marker({
                draggable: true,
                position: myLatlng,
                map: map,
                title: 'Посочен адрес'
            });

            var geocoder = new google.maps.Geocoder;

            geocodeLatLng(geocoder, map);

            function geocodeLatLng(geocoder, map) {
                var latlng = {lat: @Model.Latitude, lng: @Model.Longitude};
                geocoder.geocode({'location': latlng}, function(results, status) {
                    if (status === google.maps.GeocoderStatus.OK) {
                        if (results[1]) {
                            console.log(results[1]);
                            $('#address').html(results[1].formatted_address);
                        } else {
                            window.alert('No results found');
                        }
                    } else {
                        window.alert('Geocoder failed due to: ' + status);
                    }
                });
            }

        }
    </script>
}




